<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >

<mapper namespace="team.ruike.imm.dao.StorageMoveDao">
        <resultMap id="storageMoveMap" type="storageMove">
            <result property="smId" column="sm_id" />
            <result property="supplierProductPrice" column="sm_date" />
            <result property="supplierProductState" column="sm_remarks" />
            <result property="smState" column="sm_state"/>

            <collection property="warehousing" ofType="warehousing">
                <result property="warehousingId;" column="warehousing_id" />
                <result property="warehousingBatchNumber;" column="warehousing_batch_number" />
                <result property="warehousingBuyer;" column="warehousing_buyer" />
                <result property="procurement_Id" column="procurement_id" />
                <result property="warehousingDate" column="warehousing_date" />
                <result property="warehousingRemarks" column="warehousing_remarks"/>
                <result property="supplierMobilePhone;" column="warehousing_employee_id" />
                <result property="supplierFax" column="warehousing_state" />
            </collection>

            <collection property="employee" ofType="employee">
                <result column="employee_id" property="employeeId" />
                <result column="employee_name" property="employeeName" />
                <result column="position_id" property="positionId" />
                <result column="employee_id_number" property="employeeIdNumber" />
                <result column="employee_mobile_phone" property="employeeMobilePhone"></result>
                <result column="employee_email" property="employeeEmail"></result>
                <result column="employee_address" property="employeeAddress" />
                <result column="employee_state" property="employeeState" />
            </collection>

            <collection property="sales" ofType="sales">
                <result column="sales_id" property="salesId"/>
                <result column="sales_date" property="salesDate"/>
                <result column="client_id" property="clientId"/>
                <result column="employee_id" property="employeeId"/>
                <result column="sales_accomplish" property="salesAccomplish"/>
                <result column="event_details_id" property="eventDetails_id"/>
                <result column="sales_activities" property="salesActivities"/>
                <result column="sales_state" property="salesState"/>
            </collection>
            <collection property="user" ofType="user">
                <result column="user_id" property="userId"/>
                <result column="user_name" property="userName"/>
                <result column="user_password" property="userPassword"/>
                <result column="employee_id" property="employeeId"/>
                <result column="user_state" property="userState"/>
            </collection>
        </resultMap>

    <select id="selectStorageMove" resultMap="storageMoveMap" parameterType="storageMove">
        select * from storage_move
        <where>
             1=1
            <if test="smId!=null and smId>0">
                  and sm_id=#{smId}
            </if>
            <if test="warehousingId !=null and warehousingId!=''">
                  and warehousing_id=#{warehousingId}
            </if>
            <if test="smBuyer !=null and smBuyer!=''">
                  and sm_buyer =#{smBuyer}
            </if>
            <if test="salesId!=null and salesId !=''">
                  and sales_id =#{salesId}
            </if>
            <if test="smDate !=null and smDate !=''">
                  and sm_date =#{smDate}
            </if>
            <if test="smRemarks !=null and smRemarks!=''">
                  and sm_remarks=#{smRemarks}
            </if>
            <if test="smUserId !=null and smUserId!=''">
                  and sm_user_id =#{smUserId}
            </if>
            <if test="smState !=null and smState!=''">
                  and sm_state =#{smState}
            </if>
        </where>
        <if test="currentPage!=null and pageSize!=null">
            LIMIT #{currentPage},#{pageSize}
        </if>
    </select>

    <update id="updateStorageMove" parameterType="storageMove">
        update storage_move
        <set>
            <if test="warehousingId !=null and warehousingId!=''">
                 and warehousing_id=#{warehousingId}
            </if>
            <if test="smBuyer !=null and smBuyer!=''">
                 and sm_buyer =#{smBuyer}
            </if>
            <if test="salesId!=null and salesId !=''">
                 and sales_id =#{salesId}
            </if>
            <if test="smDate !=null and smDate !=''">
                 and sm_date =#{smDate}
            </if>
            <if test="smRemarks !=null and smRemarks!=''">
                 and sm_remarks=#{smRemarks}
            </if>
            <if test="smUserId !=null and smUserId!=''">
                 and sm_user_id =#{smUserId}
            </if>
            <if test="smState !=null and smState!=''">
                 and sm_state =#{smState}
            </if>
        </set>
        <where>
             sm_id=#{smId}
        </where>
    </update>
    <insert id="insertStorageMove" parameterType="storageMove">
        insert into storage_move values(default,#{warehousingId},#{smBuyer},#{salesId},#{smDate},#{smRemarks},#{smUserId},#{smState})
    </insert>
</mapper>

