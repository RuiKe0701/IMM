<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >

<mapper namespace="team.ruike.imm.dao.SalesDao">
    <resultMap id="salesMap" type="sales">
        <result column="sales_id" property="salesId" />
        <result column="sales_date" property="salesDate" />
        <result column="client_id"  property="clientId"/>
        <result column="employee_id" property="employeeId"/>
        <result column="sales_accomplish" property="salesAccomplish"/>
        <result column="event_details_id" property="eventDetailsId"/>
        <result column="sales_activities" property="salesActivities"/>
        <result column="sales_state" property="salesState"/>
        <result column="merchandise_id" property="merchandiseId"/>


        <collection property="salesInformations" ofType="salesInformation">
            <result column="si_id" property="siId" />
            <result column="sales_id" property="salesId" />
            <result column="merchandise_id"  property="merchandiseId"/>
            <result column="si_volume" property="siVolume"/>
            <result column="units_id" property="unitsId"/>
            <result column="si_actual_price" property="siActualPrice"/>
            <result column="si_state" property="siState"/>
            <result column="si_totalprice" property="siTotalPrice"/>
            <association property="merchandise" javaType="merchandise">
                <result column="merchandise_id" property="merchandiseId" />
                <result column="merchandise_name" property="merchandiseName" />
            </association>
            <association property="units" javaType="units">
                <result column="units_id" property="unitsId"/>
                <result column="units_name" property="unitsName"/>
            </association>
        </collection>


        <collection property="client" ofType="client">
            <id property="clientId" column="client_id"/>
            <result column="client_name" property="clientName" />
            <result column="client_person_in_charge" property="clientPersonInCharge" />
            <result column="client_post" property="clientPost" />
            <result column="client_phone" property="clientPhone"/>
            <result column="client_mobile_phone" property="clientMobilePhone"/>
            <result column="client_fax" property="clientFax" />
            <result column="client_address" property="clientAddress" />
            <result column="client_factory_address" property="clientFactoryAddress" />
            <result column="client_state" property="clientState" />
        </collection>

        <collection property="employee" ofType="employee">
            <result column="employee_id" property="employeeId" />
            <result column="employee_name" property="employeeName" />
            <result column="position_id" property="positionId" />
            <result column="employee_id_number" property="employeeIdNumber" />
            <result column="employee_mobile_phone" property="employeeMobilePhone" />
            <result column="employee_email" property="employeeEmail" />
            <result column="employee_address" property="employeeAddress" />
            <result column="employee_state" property="employeeState" />
        </collection>


        <collection property="eventDetails" ofType="eventDetails">
            <result column="event_details_id" property="eventDetailsId"/>
            <result column="event_details_name" property="eventDetailsName"/>
            <result column="event_details_state" property="eventDetailsState"/>
        </collection>

    </resultMap>

    <select id="selectSales" resultMap="salesMap" parameterType="sales">
        select * from sales s,client c,employee e,( SELECT si.*,m.merchandise_name,u.units_name,s.sales_date FROM sales_information si
        INNER JOIN sales s ON si.sales_id=s.sales_id
        INNER JOIN merchandise m ON m.merchandise_id=si.merchandise_id
        INNER JOIN units u ON u.units_id=si.units_id ) as  s_i
        <where>
            s.client_id=c.client_id and s.employee_id=e.employee_id and s.sales_id = s_i.sales_id
            <if test="salesId!=null and salesId>0">
                   and s.sales_id=#{salesId}
            </if>
            <if test="salesDate !=null and salesDate!=''">
                   and s.sales_date=#{salesDate}
            </if>
            <if test="clientId !=null and clientId>0">
                   and s.client_id =#{clientId}
            </if>
            <if test="employeeId!=null and employeeId>0">
                 and s.employee_id =#{employeeId}
            </if>
            <if test="salesAccomplish!=null and salesAccomplish>0">
                 and s.sales_accomplish =#{salesAccomplish}
            </if>
            <if test="eventDetailsId!=null and eventDetailsId>=0">
                and s.event_details_id =#{eventDetailsId}
            </if>
            <if test="salesActivities!=null and salesActivities>=0">
                and s.sales_activities=#{salesActivities}
            </if>
            <if test="salesState !=null">
                and s.sales_state=#{salesState}
            </if>
            <if test="merchandiseId !=null and merchandiseId>0">
                and s_i.merchandise_id=#{merchandiseId}
            </if>
        </where>
        <if test="currentPage!=null and pageSize!=null">
            LIMIT #{currentPage},#{pageSize}
        </if>
    </select>


    <update id="updateSales" parameterType="sales">
        update sales
        <set>
            <if test="salesId !=null and salesId!=''">
                  sales_id=#{salesId}
            </if>
            <if test="merchandiseId !=null and merchandiseId>0">
                  merchandise_id =#{merchandiseId}
            </if>
            <if test="siVolume!=null and siVolume>0">
                  si_volume =#{siVolume}
            </if>
            <if test="unitsId!=null and unitsId>0">
                  units_id =#{unitsId}
            </if>
            <if test="siActualPrice!=null and siActualPrice>=0">
                  si_actual_price =#{siActualPrice}
            </if>
            <if test="siState!=null">
                  si_state=#{siState}
            </if>
            <where>
                si_id=#{siId}
            </where>
        </set>
    </update>

    <insert id="insertSales" parameterType="sales">
    insert into sales(sales_id,sales_date,client_id,employee_id,sales_accomplish) values(#{salesId},#{salesDate},#{clientId},#{employeeId},0)
    </insert>

    <insert id="insertSalesForPu" parameterType="sales">
        insert into sales(sales_id,sales_date,client_id,employee_id,sales_accomplish) values(#{salesId},#{salesDate},#{clientId},#{employeeId},1)
    </insert>





</mapper>
<!---->
